---
title: "Tidy Tuesday (2025-09-23): FIDE Chess Player Ratings"
format: html
date: last-modified
execute:
    cache: true
code-fold: true
---

# Libraries

```{r}
#| label: libraries
#| warning: false

library(tidyverse)
library(knitr)
library(sf)
library(spData)
```

# Intro

## FIDE Chess Player Ratings Background (*[Git](https://github.com/rfordatascience/tidytuesday/tree/main/data/2025/2025-09-23)*)

This week we're exploring August and September chess player rating data from FIDE (the International Chess Federation). Monthly data files are published on the [FIDE website](https://www.fide.com/fide-september-2025-rating-list-vincent-keymer-debuts-in-top-10-open/).

A chess rating (Elo) is an estimate of a player's strength relative to other players. If a player performs better or worse than expected, their rating increases or decreases accordingly.

The September 2025 rating list was shaped primarily by results from the Sinquefield Cup, Quantbox Chennai Grand Masters, 61st International Akiba Rubinstein Chess Festival, and the Spanish League Honor Division 2025 â€“ a Swiss team tournament held in Linares.

**Questions**

- Which players showed the greatest improvement from August to September?
- Which federations have the most number of titled players?
- How did the rankings of the top male or female players change?
- Who are the top youth players?

Thank you to Jessica Moore for curating this week's dataset.

## Cleaning Data

Cleaning script provided by readme on [Git](https://github.com/rfordatascience/tidytuesday/tree/main/data/2025/2025-09-23).

Script makes use of the *withr* package, which I've never seen or used. According to the [documentation](https://github.com/r-lib/withr#readme), *withr* helps run code with safely and temporily modified global state so that code is less error-prone.

Also, the data comes as a txt where each column has fixed width. As such, the script uses *readr::read_fwf*.

The script fixes up some names with regex, filters to active players (past year) using the **flag** column, then drops the **flag** column.

## Loading Data

```{r}
#| label: load-data
#| output: false

tuesdata <- tidytuesdayR::tt_load('2025-09-23')

fide_ratings_august <- tuesdata$fide_ratings_august
fide_ratings_september <- tuesdata$fide_ratings_september
```

## Wrangle

```{r}
#| label: join-raw

tb_ratings_raw <- bind_rows(list(August = fide_ratings_august, September = fide_ratings_september), .id = "month") |> 
    arrange(id, month)

n_active <- dplyr::n_distinct(tb_ratings_raw$id)

tb_removed <- anti_join(fide_ratings_august, fide_ratings_september, "id")
tb_added <- anti_join(fide_ratings_september, fide_ratings_august, "id")
```

`r dplyr::n_distinct(tb_removed$id)` members were removed, while `r dplyr::n_distinct(tb_added$id)` members were added in September.

```{r}
#| label: FUNCTION-wrangle-ratings

wrangle_ratings <- function(tb_ratings) {
  tb_ratings |>
    filter(games > 0) |>
    mutate(
      across(where(is.double), as.integer),
      across(!name & where(is.character), as.factor),
      age = year(today()) - bday
    ) |>
    mutate(
      age_range = case_when(
        between(age, 0, 9) ~ "0 - 9",
        between(age, 10, 14) ~ "10 - 14",
        between(age, 15, 19) ~ "15 - 19",
        between(age, 20, 24) ~ "20 - 24",
        between(age, 25, 29) ~ "25 - 29",
        between(age, 30, 39) ~ "30 - 39",
        between(age, 40, 49) ~ "40 - 49",
        between(age, 50, 69) ~ "50 - 59",
        age >= 60 ~ "over 60",
      )
    ) |>
    mutate(
      age_range = factor(
        age_range,
        c(
          "0 - 9",
          "10 - 14",
          "15 - 19",
          "20 - 24",
          "25 - 29",
          "30 - 39",
          "40 - 49",
          "50 - 59",
          "over 60"
        )
      )
    ) |>
    relocate(age_range)
}
```

Setting up age ranges and removing records of people who didn't play a game.

```{r}
#| label: wrangle

tb_ratings <- wrangle_ratings(tb_ratings_raw)
```

# Exploratory Analysis

## Not Everyone Played
```{r}
#| label: basic-stats
#| tbl-cap: Not all active players actually played a game.

tb_ratings_summary <- tb_ratings_raw |> 
    group_by(month) |> 
    summarise(
        n_active = dplyr::n_distinct(id),
        n_logged = sum(games > 0),
        percent_log = round(n_logged / n_active * 100, 1),
        .groups = "keep"
        )

kable(tb_ratings_summary)
```

Only around 22% of the active players actually logged a game.

## Age and Sex
```{r}
#| label: age-stats
#| tbl-cap: Age quantiles by sex.

tb_age_quant <- tb_ratings |>
  distinct(id, .keep_all = T) |> 
  group_by(sex) |>
  reframe(
    prob = c(0, 0.1, 0.5, 0.9, 1),
    quant = quantile(age, prob)
  )

kable(tb_age_quant)
```

```{r}
#| label: age-plt
#| fig-cap: Lots of young people for both sexes may indicate chess is growing. The male chess player population has a denser, longer tail of older players than does the female population. 

# plt_age_hist_aug <-
tb_ratings |>
  distinct(id, .keep_all = T) |> 
  ggplot(aes(age, sex, fill = sex)) +
  geom_violin()
```

```{r}
#| label: sex-ratio-age

tb_sex_ratio <- tb_ratings |>
  anti_join(tb_removed |> drop_na(games), join_by(id)) |> 
  distinct(id, .keep_all = T) |> 
  group_by(sex, fed) |>
  count(age_range, name = "n_people") |>
  pivot_wider(names_from = sex, values_from = n_people) |>
  drop_na(age_range) |> 
  mutate(sex_ratio = M / F)

tb_sex_ratio |>
  drop_na(sex_ratio) |> 
  ggplot(aes(fct_rev(age_range), sex_ratio, fill = age_range)) +
  geom_violin() +
  geom_point(aes(size = F + M), alpha = 0.6) +
  labs(x = "age", y = "sex ratio (M:F)")
```

There are `r  dplyr::n_distinct(tb_sex_ratio$fed)` Feds and `r  dplyr::n_distinct(tb_sex_ratio$age_range)` age ranges (total = `r nrow(tb_sex_ratio)` groups). Of those `r nrow(tb_sex_ratio)` fed-age-group pairings, `r sum(is.na(tb_sex_ratio$sex_ratio))` lack one or both sexes, giving, making the sex ratio for that pairing *NA*.

```{r}
#| label: sex-ratio-explore

tb_sex_ratio |> group_by(age_range) |> slice_max(sex_ratio) |> mutate(sex_ratio = round(sex_ratio, 2)) |> kable()

tb_sex_ratio |> group_by(age_range) |> slice_min(sex_ratio) |> mutate(sex_ratio = round(sex_ratio, 2)) |> kable()
```

Wanted to look at sex ratios by Fed, but there are 177 Feds. Might be cool to make a map of total chess players and sex ratio by Fed over time. After looking for a while, can't find a dataset that maps Fed codes to their long name, making a join to a world map dataset more manual than I want to do. 

## Age and Rating
```{r}
#| label: age-rating-stats
#| fig-cap: The median rating at each age peaks around 25. Data too sparse in some places to take the median at every age. 

tb_age_rating <- tb_ratings |>
  group_by(age, sex, month) |>
  summarize(
    n_people = n(),
    median_rating = median(rating)
  ) |>
  relocate(sex, 1) |>
  arrange(sex, age)

tb_age_rating |>
  ggplot(aes(age, median_rating, size = n_people, color = month, alpha = 0.7)) +
  geom_point() +
  facet_wrap(vars(sex))
```

Median Elo seems to peak around 25, but some of the data is too sparse in places. Need to use age groups. Also, looks like ratings inflate.

```{r}
#| label: pairwise-t-test

tb_ratings_both <- tb_ratings |> 
  anti_join(bind_rows(tb_added, tb_removed), join_by(id)) |> 
  mutate(id = factor(id))

tb_ratings_both_wide <- tb_ratings_both |> 
  pivot_wider(names_from = month, values_from = c(rating, games)) |> 
  drop_na(contains("game"))

tb_ratings_change <- tb_ratings_both_wide |> 
  mutate(rating_change = rating_September - rating_August)
```

## Rating Changes

```{r}
#| label: plt-rating-change-hist

tb_ratings_change |> 
  ggplot(aes(rating_change)) +
  geom_histogram(binwidth = 20)

t_test_change <- t.test(tb_ratings_change$rating_change)
```

The average player improved their Elo from August to September by `r round(mean(tb_ratings_change$rating_change), 1)` with 95% CI [`r round(t_test_change$conf.int[[1]], 1)`, `r round(t_test_change$conf.int[[2]], 1)`]. 

```{r}
#| label: biggest-changes
#| tbl-cap: Top 5 Elo changes from August to September for each title category.

tb_ratings_change |> 
  mutate(abs_change = abs(rating_change)) |> 
  arrange(desc(abs_change)) |> 
  select(name, sex, age, fed, title, rating_September, rating_change) |> 
  group_by(title) |> 
  slice_head(n = 5) |> 
  kable()
```

## Titles

```{r}
#| label: most-titled-fed

tb_fed_title_summary <- tb_ratings |>
  filter(month == "September") |> 
  group_by(fed) |> 
  summarize(n_titles = sum(!is.na(title))) |> 
  arrange(desc(n_titles))

tb_fed_title_summary |> 
  slice_max(n_titles, n = 10) |> 
  ggplot(aes(fct_reorder(fed, n_titles, .desc = T), n_titles)) +
  geom_col() +
  labs(x = "Fed", y = "n titles")
```

```{r}
#| label: title-changes
#| fig-cap: The number of women with titles shrunk generally. The number of male FMs and GMs increased.
#| warning: false

tb_title_summary <- tb_ratings |>
  group_by(sex, month) |>
  count(title, name = "n_people") |>
  add_count(sex, wt = n_people, name = "total") |>
  mutate(percent_title = round(n_people / total * 100, 2))

tb_ratings |>
  filter(!is.na(title)) |>
  ggplot(aes(title, fill = month)) +
  geom_histogram(stat = "count", position = "identity") +
  facet_wrap(vars(sex))
```

